{
  "env": {
    "browser": true, //window, alert
    "node": true, //process
    "es6": true //import, const, let
  },

  "parser": "@typescript-eslint/parser", //tsのルールを適用するパーサー(js→tsの文法を解析する)

  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "projectService": true, //tsの型チェックサービスに各ソースファイルの型情報を要求することを示す
    "tsconfigRootDir": "/Users/naoto/Library/Mobile Documents/com~apple~CloudDocs/Engineering/Application/chiritsumo-14" //プロジェクトのルートディレクトリの絶対パスをパーサーに伝える
  },

  "root": true, //ESLint がこのディレクトリを超えて構成ファイルを検索しないことを示す

  "plugins": [
    "@typescript-eslint", //tsのルールを適用するプラグイン
    "import" //importのルールを適用するプラグイン
  ],

  "extends": [
    "eslint:recommended", //eslintのルール
    "plugin:@typescript-eslint/strict-type-checked", //tsのルール（文法、ロジック）
    "plugin:@typescript-eslint/stylistic-type-checked", //tsのルール（スタイル）
    "next/core-web-vitals", //nextのルール（Reactのルールも継承）
    "plugin:prettier/recommended" //prettierのルール
  ],

  "rules": {
    /** 命名規則に関するルール */ ////////////////////////////////////
    "@typescript-eslint/naming-convention": [
      "error",
      {
        // 変数名
        "selector": "variable",
        "format": ["camelCase", "PascalCase"]
      },
      // ブール値の変数名
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can"]
      },
      {
        // classやtype,interfaceなど
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        // 関数のパラメータ名
        "selector": "parameter",
        "format": ["camelCase"]
      }
    ],
    /** 型定義に関するルール */ ////////////////////////////////////
    // 型定義はTypeで強制
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],

    /** 関数に関するルール */ ////////////////////////////////////
    // 関数はアロー関数で強制
    "func-style": ["error", "expression"],
    // 関数コンポーネントもアロー関数で強制
    "react/function-component-definition": [
      "error",
      { "namedComponents": "arrow-function" }
    ],

    /** exportに関するルール */ ////////////////////////////////////
    // named exportの強制
    "import/no-default-export": "error",

    /** その他のルール */
    /** ==, != の使用禁止 */ ////////////////////////////////////
    "eqeqeq": ["error", "always"]
  },

  "overrides": [
    // Next.jsにて用意された以下ファイルにはdefault exportを使用する
    {
      "files": [
        "**/page.{js,jsx,tsx}",
        "**/layout.{js,jsx,tsx}",
        "**/loading.{js,jsx,tsx}",
        "**/not-found.{js,jsx,tsx}",
        "**/error.{js,jsx,tsx}",
        "**/global-error.{js,jsx,tsx}",
        "**/route.{js,ts}",
        "**/template.{js,jsx,tsx}",
        "**/default.{js,jsx,tsx}"
      ],
      "rules": {
        "import/no-default-export": "off",
        "import/prefer-default-export": "error"
      }
    }
  ]
}
